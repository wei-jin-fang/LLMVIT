Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/0Test.csv每一类的数量是: [3640, 800]
./data筛选/0Test.csvget_Class函数得到的的权重： [0.6098901098901099, 2.775]
./data筛选/0Test.csv每一类的数量是: [3640, 800]
./data筛选/0Test.csvget_Class函数得到的的权重： [0.6098901098901099, 2.775]
./data筛选/0Test.csv每一类的数量是: [3640, 800]
./data筛选/0Test.csvget_Class函数得到的的权重： [0.6098901098901099, 2.775]
(4440, 1)
(111,)
(4440, 1)
(111,)
(4440, 1)
(111,)
zero: 0.6098901098901099
zero: 2.775
{0.0: 0.6098901098901099, 1.0: 2.775}
====================数据集0测试集轮评估数据=============================================
[[87  4]
 [ 3 17]]
TSS: 0.8060439560439561
本轮评估完成 
Test set: Average loss: 5.5219, Accuracy: 104/111 (94%)

[[87  4]
 [ 3 17]]
Recall [0.95604396 0.85      ]
Precision [0.96666667 0.80952381]
Accuracy [0.93693694 0.93693694]
TSS [0.80604396 0.80604396]
HSS [0.79062247 0.79062247]
FAR [0.03333333 0.19047619]
data_FPR [0.15       0.04395604]
BS, BSS [0.09303920005484678, 0.3701450638045224]
数据集 0 测试集BSS: 0.3701450638045224
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/1Test.csv每一类的数量是: [4000, 760]
./data筛选/1Test.csvget_Class函数得到的的权重： [0.595, 3.1315789473684212]
./data筛选/1Test.csv每一类的数量是: [4000, 760]
./data筛选/1Test.csvget_Class函数得到的的权重： [0.595, 3.1315789473684212]
./data筛选/1Test.csv每一类的数量是: [4000, 760]
./data筛选/1Test.csvget_Class函数得到的的权重： [0.595, 3.1315789473684212]
(4760, 1)
(119,)
(4760, 1)
(119,)
(4760, 1)
(119,)
zero: 0.595
zero: 3.1315789473684212
{0.0: 0.595, 1.0: 3.1315789473684212}
====================数据集1测试集轮评估数据=============================================
[[93  7]
 [ 1 18]]
TSS: 0.8773684210526316
本轮评估完成 
Test set: Average loss: 6.2162, Accuracy: 111/119 (93%)

[[93  7]
 [ 1 18]]
Recall [0.93       0.94736842]
Precision [0.9893617 0.72     ]
Accuracy [0.93277311 0.93277311]
TSS [0.87736842 0.87736842]
HSS [0.77788147 0.77788147]
FAR [0.0106383 0.28     ]
data_FPR [0.05263158 0.07      ]
BS, BSS [0.12044258565144622, 0.10232239188940484]
数据集 1 测试集BSS: 0.10232239188940484
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/2Test.csv每一类的数量是: [3560, 720]
./data筛选/2Test.csvget_Class函数得到的的权重： [0.601123595505618, 2.9722222222222223]
./data筛选/2Test.csv每一类的数量是: [3560, 720]
./data筛选/2Test.csvget_Class函数得到的的权重： [0.601123595505618, 2.9722222222222223]
./data筛选/2Test.csv每一类的数量是: [3560, 720]
./data筛选/2Test.csvget_Class函数得到的的权重： [0.601123595505618, 2.9722222222222223]
(4280, 1)
(107,)
(4280, 1)
(107,)
(4280, 1)
(107,)
zero: 0.601123595505618
zero: 2.9722222222222223
{0.0: 0.601123595505618, 1.0: 2.9722222222222223}
====================数据集2测试集轮评估数据=============================================
[[80  9]
 [ 0 18]]
TSS: 0.898876404494382
本轮评估完成 
Test set: Average loss: 6.0100, Accuracy: 98/107 (92%)

[[80  9]
 [ 0 18]]
Recall [0.8988764 1.       ]
Precision [1.         0.66666667]
Accuracy [0.91588785 0.91588785]
TSS [0.8988764 0.8988764]
HSS [0.74941452 0.74941452]
FAR [0.         0.33333333]
data_FPR [0.        0.1011236]
BS, BSS [0.1073967578721319, 0.23246848884017624]
数据集 2 测试集BSS: 0.23246848884017624
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/3Test.csv每一类的数量是: [3280, 880]
./data筛选/3Test.csvget_Class函数得到的的权重： [0.6341463414634146, 2.3636363636363638]
./data筛选/3Test.csv每一类的数量是: [3280, 880]
./data筛选/3Test.csvget_Class函数得到的的权重： [0.6341463414634146, 2.3636363636363638]
./data筛选/3Test.csv每一类的数量是: [3280, 880]
./data筛选/3Test.csvget_Class函数得到的的权重： [0.6341463414634146, 2.3636363636363638]
(4160, 1)
(104,)
(4160, 1)
(104,)
(4160, 1)
(104,)
zero: 0.6341463414634146
zero: 2.3636363636363638
{0.0: 0.6341463414634146, 1.0: 2.3636363636363638}
====================数据集3测试集轮评估数据=============================================
[[72 10]
 [ 3 19]]
TSS: 0.7416851441241685
本轮评估完成 
Test set: Average loss: 5.1194, Accuracy: 91/104 (88%)

[[72 10]
 [ 3 19]]
Recall [0.87804878 0.86363636]
Precision [0.96       0.65517241]
Accuracy [0.875 0.875]
TSS [0.74168514 0.74168514]
HSS [0.66434955 0.66434955]
FAR [0.04       0.34482759]
data_FPR [0.13636364 0.12195122]
BS, BSS [0.09670797513401566, 0.42018100939605574]
数据集 3 测试集BSS: 0.42018100939605574
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/4Test.csv每一类的数量是: [3440, 680]
./data筛选/4Test.csvget_Class函数得到的的权重： [0.5988372093023255, 3.0294117647058822]
./data筛选/4Test.csv每一类的数量是: [3440, 680]
./data筛选/4Test.csvget_Class函数得到的的权重： [0.5988372093023255, 3.0294117647058822]
./data筛选/4Test.csv每一类的数量是: [3440, 680]
./data筛选/4Test.csvget_Class函数得到的的权重： [0.5988372093023255, 3.0294117647058822]
(4120, 1)
(103,)
(4120, 1)
(103,)
(4120, 1)
(103,)
zero: 0.5988372093023255
zero: 3.0294117647058822
{0.0: 0.5988372093023255, 1.0: 3.0294117647058822}
====================数据集4测试集轮评估数据=============================================
[[79  7]
 [ 0 17]]
TSS: 0.9186046511627907
本轮评估完成 
Test set: Average loss: 4.6429, Accuracy: 96/103 (93%)

[[79  7]
 [ 0 17]]
Recall [0.91860465 1.        ]
Precision [1.         0.70833333]
Accuracy [0.93203883 0.93203883]
TSS [0.91860465 0.91860465]
HSS [0.78837687 0.78837687]
FAR [0.         0.29166667]
data_FPR [0.         0.08139535]
BS, BSS [0.08494374647087043, 0.3836058780373026]
数据集 4 测试集BSS: 0.3836058780373026
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/5Test.csv每一类的数量是: [3200, 800]
./data筛选/5Test.csvget_Class函数得到的的权重： [0.625, 2.5]
./data筛选/5Test.csv每一类的数量是: [3200, 800]
./data筛选/5Test.csvget_Class函数得到的的权重： [0.625, 2.5]
./data筛选/5Test.csv每一类的数量是: [3200, 800]
./data筛选/5Test.csvget_Class函数得到的的权重： [0.625, 2.5]
(4000, 1)
(100,)
(4000, 1)
(100,)
(4000, 1)
(100,)
zero: 0.625
zero: 2.5
{0.0: 0.625, 1.0: 2.5}
====================数据集5测试集轮评估数据=============================================
[[77  3]
 [ 4 16]]
TSS: 0.7625000000000001
本轮评估完成 
Test set: Average loss: 5.1511, Accuracy: 93/100 (93%)

[[77  3]
 [ 4 16]]
Recall [0.9625 0.8   ]
Precision [0.95061728 0.84210526]
Accuracy [0.93 0.93]
TSS [0.7625 0.7625]
HSS [0.77707006 0.77707006]
FAR [0.04938272 0.15789474]
data_FPR [0.2    0.0375]
BS, BSS [0.09892420060603997, 0.3817237462122489]
数据集 5 测试集BSS: 0.3817237462122489
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/6Test.csv每一类的数量是: [3880, 800]
./data筛选/6Test.csvget_Class函数得到的的权重： [0.6030927835051546, 2.925]
./data筛选/6Test.csv每一类的数量是: [3880, 800]
./data筛选/6Test.csvget_Class函数得到的的权重： [0.6030927835051546, 2.925]
./data筛选/6Test.csv每一类的数量是: [3880, 800]
./data筛选/6Test.csvget_Class函数得到的的权重： [0.6030927835051546, 2.925]
(4680, 1)
(117,)
(4680, 1)
(117,)
(4680, 1)
(117,)
zero: 0.6030927835051546
zero: 2.925
{0.0: 0.6030927835051546, 1.0: 2.925}
====================数据集6测试集轮评估数据=============================================
[[90  7]
 [ 6 14]]
TSS: 0.6278350515463917
本轮评估完成 
Test set: Average loss: 5.1196, Accuracy: 104/117 (89%)

[[90  7]
 [ 6 14]]
Recall [0.92783505 0.7       ]
Precision [0.9375     0.66666667]
Accuracy [0.88888889 0.88888889]
TSS [0.62783505 0.62783505]
HSS [0.61561789 0.61561789]
FAR [0.0625     0.33333333]
data_FPR [0.3        0.07216495]
BS, BSS [0.0971902081669238, 0.3142078558778235]
数据集 6 测试集BSS: 0.3142078558778235
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/7Test.csv每一类的数量是: [3640, 840]
./data筛选/7Test.csvget_Class函数得到的的权重： [0.6153846153846154, 2.6666666666666665]
./data筛选/7Test.csv每一类的数量是: [3640, 840]
./data筛选/7Test.csvget_Class函数得到的的权重： [0.6153846153846154, 2.6666666666666665]
./data筛选/7Test.csv每一类的数量是: [3640, 840]
./data筛选/7Test.csvget_Class函数得到的的权重： [0.6153846153846154, 2.6666666666666665]
(4480, 1)
(112,)
(4480, 1)
(112,)
(4480, 1)
(112,)
zero: 0.6153846153846154
zero: 2.6666666666666665
{0.0: 0.6153846153846154, 1.0: 2.6666666666666665}
====================数据集7测试集轮评估数据=============================================
[[83  8]
 [ 5 16]]
TSS: 0.6739926739926739
本轮评估完成 
Test set: Average loss: 6.9875, Accuracy: 99/112 (88%)

[[83  8]
 [ 5 16]]
Recall [0.91208791 0.76190476]
Precision [0.94318182 0.66666667]
Accuracy [0.88392857 0.88392857]
TSS [0.67399267 0.67399267]
HSS [0.63888889 0.63888889]
FAR [0.05681818 0.33333333]
data_FPR [0.23809524 0.08791209]
BS, BSS [0.12515235099869657, 0.17848713190599175]
数据集 7 测试集BSS: 0.17848713190599175
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/8Test.csv每一类的数量是: [3440, 640]
./data筛选/8Test.csvget_Class函数得到的的权重： [0.5930232558139535, 3.1875]
./data筛选/8Test.csv每一类的数量是: [3440, 640]
./data筛选/8Test.csvget_Class函数得到的的权重： [0.5930232558139535, 3.1875]
./data筛选/8Test.csv每一类的数量是: [3440, 640]
./data筛选/8Test.csvget_Class函数得到的的权重： [0.5930232558139535, 3.1875]
(4080, 1)
(102,)
(4080, 1)
(102,)
(4080, 1)
(102,)
zero: 0.5930232558139535
zero: 3.1875
{0.0: 0.5930232558139535, 1.0: 3.1875}
====================数据集8测试集轮评估数据=============================================
[[81  5]
 [ 3 13]]
TSS: 0.7543604651162791
本轮评估完成 
Test set: Average loss: 4.9741, Accuracy: 94/102 (92%)

[[81  5]
 [ 3 13]]
Recall [0.94186047 0.8125    ]
Precision [0.96428571 0.72222222]
Accuracy [0.92156863 0.92156863]
TSS [0.75436047 0.75436047]
HSS [0.71784232 0.71784232]
FAR [0.03571429 0.27777778]
data_FPR [0.1875     0.05813953]
BS, BSS [0.09193247757076252, 0.30489426115827345]
数据集 8 测试集BSS: 0.30489426115827345
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/9Test.csv每一类的数量是: [3400, 840]
./data筛选/9Test.csvget_Class函数得到的的权重： [0.6235294117647059, 2.5238095238095237]
./data筛选/9Test.csv每一类的数量是: [3400, 840]
./data筛选/9Test.csvget_Class函数得到的的权重： [0.6235294117647059, 2.5238095238095237]
./data筛选/9Test.csv每一类的数量是: [3400, 840]
./data筛选/9Test.csvget_Class函数得到的的权重： [0.6235294117647059, 2.5238095238095237]
(4240, 1)
(106,)
(4240, 1)
(106,)
(4240, 1)
(106,)
zero: 0.6235294117647059
zero: 2.5238095238095237
{0.0: 0.6235294117647059, 1.0: 2.5238095238095237}
====================数据集9测试集轮评估数据=============================================
[[80  5]
 [ 2 19]]
TSS: 0.84593837535014
本轮评估完成 
Test set: Average loss: 5.0935, Accuracy: 99/106 (93%)

[[80  5]
 [ 2 19]]
Recall [0.94117647 0.9047619 ]
Precision [0.97560976 0.79166667]
Accuracy [0.93396226 0.93396226]
TSS [0.84593838 0.84593838]
HSS [0.80276449 0.80276449]
FAR [0.02439024 0.20833333]
data_FPR [0.0952381  0.05882353]
BS, BSS [0.08870008995101411, 0.44166150661647474]
数据集 9 测试集BSS: 0.44166150661647474
#接下来计算所有测试集指标均值和方法
[[822  65]
 [ 27 167]]
[[0.09303920005484678, 0.3701450638045224], [0.12044258565144622, 0.10232239188940484], [0.1073967578721319, 0.23246848884017624], [0.09670797513401566, 0.42018100939605574], [0.08494374647087043, 0.3836058780373026], [0.09892420060603997, 0.3817237462122489], [0.0971902081669238, 0.3142078558778235], [0.12515235099869657, 0.17848713190599175], [0.09193247757076252, 0.30489426115827345], [0.08870008995101411, 0.44166150661647474]]
结果已写入 ./model_output/2024-11-03-21-08-26/results.xlsx
程序运行时间: 0.12 分钟
