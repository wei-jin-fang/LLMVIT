Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LLM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/0Test.csv每一类的数量是: [3640, 800]
./data筛选/0Test.csvget_Class函数得到的的权重： [0.6098901098901099, 2.775]
./data筛选/0Test.csv每一类的数量是: [3640, 800]
./data筛选/0Test.csvget_Class函数得到的的权重： [0.6098901098901099, 2.775]
./data筛选/0Test.csv每一类的数量是: [3640, 800]
./data筛选/0Test.csvget_Class函数得到的的权重： [0.6098901098901099, 2.775]
(4440, 10)
(111, 40, 10)
(4440, 1)
(111,)
(4440, 1)
(111,)
(4440, 1)
(111,)
zero: 0.6098901098901099
zero: 2.775
{0.0: 0.6098901098901099, 1.0: 2.775}
====================数据集0测试集轮评估数据=============================================
[[85  6]
 [ 5 15]]
TSS: 0.6840659340659341
本轮评估完成 
Test set: Average loss: 10.9905, Accuracy: 100/111 (90%)

[[85  6]
 [ 5 15]]
Recall [0.93406593 0.75      ]
Precision [0.94444444 0.71428571]
Accuracy [0.9009009 0.9009009]
TSS [0.68406593 0.68406593]
HSS [0.67097817 0.67097817]
FAR [0.05555556 0.28571429]
data_FPR [0.25       0.06593407]
BS, BSS [0.2499728270352265, -0.6922610999456191]
数据集 0 测试集TSS: 0.6840659340659341
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LLM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/1Test.csv每一类的数量是: [4000, 760]
./data筛选/1Test.csvget_Class函数得到的的权重： [0.595, 3.1315789473684212]
./data筛选/1Test.csv每一类的数量是: [4000, 760]
./data筛选/1Test.csvget_Class函数得到的的权重： [0.595, 3.1315789473684212]
./data筛选/1Test.csv每一类的数量是: [4000, 760]
./data筛选/1Test.csvget_Class函数得到的的权重： [0.595, 3.1315789473684212]
(4760, 10)
(119, 40, 10)
(4760, 1)
(119,)
(4760, 1)
(119,)
(4760, 1)
(119,)
zero: 0.595
zero: 3.1315789473684212
{0.0: 0.595, 1.0: 3.1315789473684212}
====================数据集1测试集轮评估数据=============================================
[[90 10]
 [ 1 18]]
TSS: 0.8473684210526315
本轮评估完成 
Test set: Average loss: 7.1299, Accuracy: 108/119 (91%)

[[90 10]
 [ 1 18]]
Recall [0.9        0.94736842]
Precision [0.98901099 0.64285714]
Accuracy [0.90756303 0.90756303]
TSS [0.84736842 0.84736842]
HSS [0.71097372 0.71097372]
FAR [0.01098901 0.35714286]
data_FPR [0.05263158 0.1       ]
BS, BSS [0.14630790581374273, -0.09045592327811125]
数据集 1 测试集TSS: 0.8473684210526315
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LLM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/2Test.csv每一类的数量是: [3560, 720]
./data筛选/2Test.csvget_Class函数得到的的权重： [0.601123595505618, 2.9722222222222223]
./data筛选/2Test.csv每一类的数量是: [3560, 720]
./data筛选/2Test.csvget_Class函数得到的的权重： [0.601123595505618, 2.9722222222222223]
./data筛选/2Test.csv每一类的数量是: [3560, 720]
./data筛选/2Test.csvget_Class函数得到的的权重： [0.601123595505618, 2.9722222222222223]
(4280, 10)
(107, 40, 10)
(4280, 1)
(107,)
(4280, 1)
(107,)
(4280, 1)
(107,)
zero: 0.601123595505618
zero: 2.9722222222222223
{0.0: 0.601123595505618, 1.0: 2.9722222222222223}
====================数据集2测试集轮评估数据=============================================
[[70 19]
 [ 0 18]]
TSS: 0.7865168539325843
本轮评估完成 
Test set: Average loss: 7.6719, Accuracy: 88/107 (82%)

[[70 19]
 [ 0 18]]
Recall [0.78651685 1.        ]
Precision [1.         0.48648649]
Accuracy [0.82242991 0.82242991]
TSS [0.78651685 0.78651685]
HSS [0.55348122 0.55348122]
FAR [0.         0.51351351]
data_FPR [0.         0.21348315]
BS, BSS [0.1587149196595197, -0.13428658875271005]
数据集 2 测试集TSS: 0.7865168539325843
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LLM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/3Test.csv每一类的数量是: [3280, 880]
./data筛选/3Test.csvget_Class函数得到的的权重： [0.6341463414634146, 2.3636363636363638]
./data筛选/3Test.csv每一类的数量是: [3280, 880]
./data筛选/3Test.csvget_Class函数得到的的权重： [0.6341463414634146, 2.3636363636363638]
./data筛选/3Test.csv每一类的数量是: [3280, 880]
./data筛选/3Test.csvget_Class函数得到的的权重： [0.6341463414634146, 2.3636363636363638]
(4160, 10)
(104, 40, 10)
(4160, 1)
(104,)
(4160, 1)
(104,)
(4160, 1)
(104,)
zero: 0.6341463414634146
zero: 2.3636363636363638
{0.0: 0.6341463414634146, 1.0: 2.3636363636363638}
====================数据集3测试集轮评估数据=============================================
[[78  4]
 [ 4 18]]
TSS: 0.7694013303769401
本轮评估完成 
Test set: Average loss: 6.3071, Accuracy: 96/104 (92%)

[[78  4]
 [ 4 18]]
Recall [0.95121951 0.81818182]
Precision [0.95121951 0.81818182]
Accuracy [0.92307692 0.92307692]
TSS [0.76940133 0.76940133]
HSS [0.76940133 0.76940133]
FAR [0.04878049 0.18181818]
data_FPR [0.18181818 0.04878049]
BS, BSS [0.12199621508140648, 0.26856371268265355]
数据集 3 测试集TSS: 0.7694013303769401
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LLM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/4Test.csv每一类的数量是: [3440, 680]
./data筛选/4Test.csvget_Class函数得到的的权重： [0.5988372093023255, 3.0294117647058822]
./data筛选/4Test.csv每一类的数量是: [3440, 680]
./data筛选/4Test.csvget_Class函数得到的的权重： [0.5988372093023255, 3.0294117647058822]
./data筛选/4Test.csv每一类的数量是: [3440, 680]
./data筛选/4Test.csvget_Class函数得到的的权重： [0.5988372093023255, 3.0294117647058822]
(4120, 10)
(103, 40, 10)
(4120, 1)
(103,)
(4120, 1)
(103,)
(4120, 1)
(103,)
zero: 0.5988372093023255
zero: 3.0294117647058822
{0.0: 0.5988372093023255, 1.0: 3.0294117647058822}
====================数据集4测试集轮评估数据=============================================
[[79  7]
 [ 4 13]]
TSS: 0.6833105335157318
本轮评估完成 
Test set: Average loss: 6.4191, Accuracy: 92/103 (89%)

[[79  7]
 [ 4 13]]
Recall [0.91860465 0.76470588]
Precision [0.95180723 0.65      ]
Accuracy [0.89320388 0.89320388]
TSS [0.68331053 0.68331053]
HSS [0.63813478 0.63813478]
FAR [0.04819277 0.35      ]
data_FPR [0.23529412 0.08139535]
BS, BSS [0.1296409747482457, 0.05926053276050702]
数据集 4 测试集TSS: 0.6833105335157318
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LLM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/5Test.csv每一类的数量是: [3200, 800]
./data筛选/5Test.csvget_Class函数得到的的权重： [0.625, 2.5]
./data筛选/5Test.csv每一类的数量是: [3200, 800]
./data筛选/5Test.csvget_Class函数得到的的权重： [0.625, 2.5]
./data筛选/5Test.csv每一类的数量是: [3200, 800]
./data筛选/5Test.csvget_Class函数得到的的权重： [0.625, 2.5]
(4000, 10)
(100, 40, 10)
(4000, 1)
(100,)
(4000, 1)
(100,)
(4000, 1)
(100,)
zero: 0.625
zero: 2.5
{0.0: 0.625, 1.0: 2.5}
====================数据集5测试集轮评估数据=============================================
[[80  0]
 [11  9]]
TSS: 0.44999999999999996
本轮评估完成 
Test set: Average loss: 7.2696, Accuracy: 89/100 (89%)

[[80  0]
 [11  9]]
Recall [1.   0.45]
Precision [0.87912088 1.        ]
Accuracy [0.89 0.89]
TSS [0.45 0.45]
HSS [0.56692913 0.56692913]
FAR [0.12087912 0.        ]
data_FPR [0.55 0.  ]
BS, BSS [0.1628542320373656, -0.017838950233534767]
数据集 5 测试集TSS: 0.44999999999999996
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LLM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/6Test.csv每一类的数量是: [3880, 800]
./data筛选/6Test.csvget_Class函数得到的的权重： [0.6030927835051546, 2.925]
./data筛选/6Test.csv每一类的数量是: [3880, 800]
./data筛选/6Test.csvget_Class函数得到的的权重： [0.6030927835051546, 2.925]
./data筛选/6Test.csv每一类的数量是: [3880, 800]
./data筛选/6Test.csvget_Class函数得到的的权重： [0.6030927835051546, 2.925]
(4680, 10)
(117, 40, 10)
(4680, 1)
(117,)
(4680, 1)
(117,)
(4680, 1)
(117,)
zero: 0.6030927835051546
zero: 2.925
{0.0: 0.6030927835051546, 1.0: 2.925}
====================数据集6测试集轮评估数据=============================================
[[77 20]
 [ 4 16]]
TSS: 0.5938144329896907
本轮评估完成 
Test set: Average loss: 7.3547, Accuracy: 93/117 (79%)

[[77 20]
 [ 4 16]]
Recall [0.79381443 0.8       ]
Precision [0.95061728 0.44444444]
Accuracy [0.79487179 0.79487179]
TSS [0.59381443 0.59381443]
HSS [0.45070423 0.45070423]
FAR [0.04938272 0.55555556]
data_FPR [0.2        0.20618557]
BS, BSS [0.1609459437808674, -0.1356644455754088]
数据集 6 测试集TSS: 0.5938144329896907
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LLM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/7Test.csv每一类的数量是: [3640, 840]
./data筛选/7Test.csvget_Class函数得到的的权重： [0.6153846153846154, 2.6666666666666665]
./data筛选/7Test.csv每一类的数量是: [3640, 840]
./data筛选/7Test.csvget_Class函数得到的的权重： [0.6153846153846154, 2.6666666666666665]
./data筛选/7Test.csv每一类的数量是: [3640, 840]
./data筛选/7Test.csvget_Class函数得到的的权重： [0.6153846153846154, 2.6666666666666665]
(4480, 10)
(112, 40, 10)
(4480, 1)
(112,)
(4480, 1)
(112,)
(4480, 1)
(112,)
zero: 0.6153846153846154
zero: 2.6666666666666665
{0.0: 0.6153846153846154, 1.0: 2.6666666666666665}
====================数据集7测试集轮评估数据=============================================
[[82  9]
 [ 4 17]]
TSS: 0.7106227106227107
本轮评估完成 
Test set: Average loss: 9.4162, Accuracy: 99/112 (88%)

[[82  9]
 [ 4 17]]
Recall [0.9010989  0.80952381]
Precision [0.95348837 0.65384615]
Accuracy [0.88392857 0.88392857]
TSS [0.71062271 0.71062271]
HSS [0.65100671 0.65100671]
FAR [0.04651163 0.34615385]
data_FPR [0.19047619 0.0989011 ]
BS, BSS [0.19675233441306053, -0.29150250281393575]
数据集 7 测试集TSS: 0.7106227106227107
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LLM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/8Test.csv每一类的数量是: [3440, 640]
./data筛选/8Test.csvget_Class函数得到的的权重： [0.5930232558139535, 3.1875]
./data筛选/8Test.csv每一类的数量是: [3440, 640]
./data筛选/8Test.csvget_Class函数得到的的权重： [0.5930232558139535, 3.1875]
./data筛选/8Test.csv每一类的数量是: [3440, 640]
./data筛选/8Test.csvget_Class函数得到的的权重： [0.5930232558139535, 3.1875]
(4080, 10)
(102, 40, 10)
(4080, 1)
(102,)
(4080, 1)
(102,)
(4080, 1)
(102,)
zero: 0.5930232558139535
zero: 3.1875
{0.0: 0.5930232558139535, 1.0: 3.1875}
====================数据集8测试集轮评估数据=============================================
[[69 17]
 [ 2 14]]
TSS: 0.6773255813953488
本轮评估完成 
Test set: Average loss: 9.6077, Accuracy: 83/102 (81%)

[[69 17]
 [ 2 14]]
Recall [0.80232558 0.875     ]
Precision [0.97183099 0.4516129 ]
Accuracy [0.81372549 0.81372549]
TSS [0.67732558 0.67732558]
HSS [0.49026828 0.49026828]
FAR [0.02816901 0.5483871 ]
data_FPR [0.125      0.19767442]
BS, BSS [0.2324509908655191, -0.7575727536081833]
数据集 8 测试集TSS: 0.6773255813953488
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LLM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/9Test.csv每一类的数量是: [3400, 840]
./data筛选/9Test.csvget_Class函数得到的的权重： [0.6235294117647059, 2.5238095238095237]
./data筛选/9Test.csv每一类的数量是: [3400, 840]
./data筛选/9Test.csvget_Class函数得到的的权重： [0.6235294117647059, 2.5238095238095237]
./data筛选/9Test.csv每一类的数量是: [3400, 840]
./data筛选/9Test.csvget_Class函数得到的的权重： [0.6235294117647059, 2.5238095238095237]
(4240, 10)
(106, 40, 10)
(4240, 1)
(106,)
(4240, 1)
(106,)
(4240, 1)
(106,)
zero: 0.6235294117647059
zero: 2.5238095238095237
{0.0: 0.6235294117647059, 1.0: 2.5238095238095237}
====================数据集9测试集轮评估数据=============================================
[[72 13]
 [ 2 19]]
TSS: 0.7518207282913165
本轮评估完成 
Test set: Average loss: 7.1370, Accuracy: 91/106 (86%)

[[72 13]
 [ 2 19]]
Recall [0.84705882 0.9047619 ]
Precision [0.97297297 0.59375   ]
Accuracy [0.85849057 0.85849057]
TSS [0.75182073 0.75182073]
HSS [0.62798315 0.62798315]
FAR [0.02702703 0.40625   ]
data_FPR [0.0952381  0.15294118]
BS, BSS [0.1381658104886451, 0.1302907301678341]
数据集 9 测试集TSS: 0.7518207282913165
#接下来计算所有测试集指标均值和方法
[[782 105]
 [ 37 157]]
[[0.2499728270352265, -0.6922610999456191], [0.14630790581374273, -0.09045592327811125], [0.1587149196595197, -0.13428658875271005], [0.12199621508140648, 0.26856371268265355], [0.1296409747482457, 0.05926053276050702], [0.1628542320373656, -0.017838950233534767], [0.1609459437808674, -0.1356644455754088], [0.19675233441306053, -0.29150250281393575], [0.2324509908655191, -0.7575727536081833], [0.1381658104886451, 0.1302907301678341]]
结果已写入 ./model_output/2025-03-28-17-17-53/results.xlsx
程序运行时间: 0.14 分钟
lr0.001_epochs160_datasetNum9_modelTypeLSTM_batchsize16_numhiddenlayers4_lr0.001_numheads5_embeddim100_hiddenunits256_numlayers2_datasetnamedata筛选
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/0Test.csv每一类的数量是: [3640, 800]
./data筛选/0Test.csvget_Class函数得到的的权重： [0.6098901098901099, 2.775]
./data筛选/0Test.csv每一类的数量是: [3640, 800]
./data筛选/0Test.csvget_Class函数得到的的权重： [0.6098901098901099, 2.775]
./data筛选/0Test.csv每一类的数量是: [3640, 800]
./data筛选/0Test.csvget_Class函数得到的的权重： [0.6098901098901099, 2.775]
(4440, 10)
(111, 40, 10)
(4440, 1)
(111,)
(4440, 1)
(111,)
(4440, 1)
(111,)
zero: 0.6098901098901099
zero: 2.775
{0.0: 0.6098901098901099, 1.0: 2.775}
====================数据集0测试集轮评估数据=============================================
[[79 12]
 [ 2 18]]
TSS: 0.7681318681318682
本轮评估完成 
Test set: Average loss: 6.3085, Accuracy: 97/111 (87%)

[[79 12]
 [ 2 18]]
Recall [0.86813187 0.9       ]
Precision [0.97530864 0.6       ]
Accuracy [0.87387387 0.87387387]
TSS [0.76813187 0.76813187]
HSS [0.64275862 0.64275862]
FAR [0.02469136 0.4       ]
data_FPR [0.1        0.13186813]
BS, BSS [0.11246058757599539, 0.238666538723165]
数据集 0 测试集TSS: 0.7681318681318682
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/1Test.csv每一类的数量是: [4000, 760]
./data筛选/1Test.csvget_Class函数得到的的权重： [0.595, 3.1315789473684212]
./data筛选/1Test.csv每一类的数量是: [4000, 760]
./data筛选/1Test.csvget_Class函数得到的的权重： [0.595, 3.1315789473684212]
./data筛选/1Test.csv每一类的数量是: [4000, 760]
./data筛选/1Test.csvget_Class函数得到的的权重： [0.595, 3.1315789473684212]
(4760, 10)
(119, 40, 10)
(4760, 1)
(119,)
(4760, 1)
(119,)
(4760, 1)
(119,)
zero: 0.595
zero: 3.1315789473684212
{0.0: 0.595, 1.0: 3.1315789473684212}
====================数据集1测试集轮评估数据=============================================
[[85 15]
 [ 1 18]]
TSS: 0.7973684210526315
本轮评估完成 
Test set: Average loss: 7.1328, Accuracy: 103/119 (87%)

[[85 15]
 [ 1 18]]
Recall [0.85       0.94736842]
Precision [0.98837209 0.54545455]
Accuracy [0.86554622 0.86554622]
TSS [0.79736842 0.79736842]
HSS [0.6141062 0.6141062]
FAR [0.01162791 0.45454545]
data_FPR [0.05263158 0.15      ]
BS, BSS [0.14370021793202084, -0.07102041375544621]
数据集 1 测试集TSS: 0.7973684210526315
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/2Test.csv每一类的数量是: [3560, 720]
./data筛选/2Test.csvget_Class函数得到的的权重： [0.601123595505618, 2.9722222222222223]
./data筛选/2Test.csv每一类的数量是: [3560, 720]
./data筛选/2Test.csvget_Class函数得到的的权重： [0.601123595505618, 2.9722222222222223]
./data筛选/2Test.csv每一类的数量是: [3560, 720]
./data筛选/2Test.csvget_Class函数得到的的权重： [0.601123595505618, 2.9722222222222223]
(4280, 10)
(107, 40, 10)
(4280, 1)
(107,)
(4280, 1)
(107,)
(4280, 1)
(107,)
zero: 0.601123595505618
zero: 2.9722222222222223
{0.0: 0.601123595505618, 1.0: 2.9722222222222223}
====================数据集2测试集轮评估数据=============================================
[[81  8]
 [ 0 18]]
TSS: 0.9101123595505618
本轮评估完成 
Test set: Average loss: 6.1985, Accuracy: 99/107 (93%)

[[81  8]
 [ 0 18]]
Recall [0.91011236 1.        ]
Precision [1.         0.69230769]
Accuracy [0.92523364 0.92523364]
TSS [0.91011236 0.91011236]
HSS [0.77306469 0.77306469]
FAR [0.         0.30769231]
data_FPR [0.         0.08988764]
BS, BSS [0.10664472847311182, 0.23784301105576933]
数据集 2 测试集TSS: 0.9101123595505618
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/3Test.csv每一类的数量是: [3280, 880]
./data筛选/3Test.csvget_Class函数得到的的权重： [0.6341463414634146, 2.3636363636363638]
./data筛选/3Test.csv每一类的数量是: [3280, 880]
./data筛选/3Test.csvget_Class函数得到的的权重： [0.6341463414634146, 2.3636363636363638]
./data筛选/3Test.csv每一类的数量是: [3280, 880]
./data筛选/3Test.csvget_Class函数得到的的权重： [0.6341463414634146, 2.3636363636363638]
(4160, 10)
(104, 40, 10)
(4160, 1)
(104,)
(4160, 1)
(104,)
(4160, 1)
(104,)
zero: 0.6341463414634146
zero: 2.3636363636363638
{0.0: 0.6341463414634146, 1.0: 2.3636363636363638}
====================数据集3测试集轮评估数据=============================================
[[68 14]
 [ 2 20]]
TSS: 0.7383592017738358
本轮评估完成 
Test set: Average loss: 5.6129, Accuracy: 88/104 (85%)

[[68 14]
 [ 2 20]]
Recall [0.82926829 0.90909091]
Precision [0.97142857 0.58823529]
Accuracy [0.84615385 0.84615385]
TSS [0.7383592 0.7383592]
HSS [0.6155268 0.6155268]
FAR [0.02857143 0.41176471]
data_FPR [0.09090909 0.17073171]
BS, BSS [0.11027165107182521, 0.3388591031081697]
数据集 3 测试集TSS: 0.7383592017738358
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/4Test.csv每一类的数量是: [3440, 680]
./data筛选/4Test.csvget_Class函数得到的的权重： [0.5988372093023255, 3.0294117647058822]
./data筛选/4Test.csv每一类的数量是: [3440, 680]
./data筛选/4Test.csvget_Class函数得到的的权重： [0.5988372093023255, 3.0294117647058822]
./data筛选/4Test.csv每一类的数量是: [3440, 680]
./data筛选/4Test.csvget_Class函数得到的的权重： [0.5988372093023255, 3.0294117647058822]
(4120, 10)
(103, 40, 10)
(4120, 1)
(103,)
(4120, 1)
(103,)
(4120, 1)
(103,)
zero: 0.5988372093023255
zero: 3.0294117647058822
{0.0: 0.5988372093023255, 1.0: 3.0294117647058822}
====================数据集4测试集轮评估数据=============================================
[[82  4]
 [ 3 14]]
TSS: 0.7770177838577291
本轮评估完成 
Test set: Average loss: 5.8018, Accuracy: 96/103 (93%)

[[82  4]
 [ 3 14]]
Recall [0.95348837 0.82352941]
Precision [0.96470588 0.77777778]
Accuracy [0.93203883 0.93203883]
TSS [0.77701778 0.77701778]
HSS [0.75910458 0.75910458]
FAR [0.03529412 0.22222222]
data_FPR [0.17647059 0.04651163]
BS, BSS [0.11561098161401942, 0.1610691491497045]
数据集 4 测试集TSS: 0.7770177838577291
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/5Test.csv每一类的数量是: [3200, 800]
./data筛选/5Test.csvget_Class函数得到的的权重： [0.625, 2.5]
./data筛选/5Test.csv每一类的数量是: [3200, 800]
./data筛选/5Test.csvget_Class函数得到的的权重： [0.625, 2.5]
./data筛选/5Test.csv每一类的数量是: [3200, 800]
./data筛选/5Test.csvget_Class函数得到的的权重： [0.625, 2.5]
(4000, 10)
(100, 40, 10)
(4000, 1)
(100,)
(4000, 1)
(100,)
(4000, 1)
(100,)
zero: 0.625
zero: 2.5
{0.0: 0.625, 1.0: 2.5}
====================数据集5测试集轮评估数据=============================================
[[71  9]
 [ 1 19]]
TSS: 0.8374999999999999
本轮评估完成 
Test set: Average loss: 6.1198, Accuracy: 90/100 (90%)

[[71  9]
 [ 1 19]]
Recall [0.8875 0.95  ]
Precision [0.98611111 0.67857143]
Accuracy [0.9 0.9]
TSS [0.8375 0.8375]
HSS [0.72826087 0.72826087]
FAR [0.01388889 0.32142857]
data_FPR [0.05   0.1125]
BS, BSS [0.12416595652362349, 0.22396277172735335]
数据集 5 测试集TSS: 0.8374999999999999
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/6Test.csv每一类的数量是: [3880, 800]
./data筛选/6Test.csvget_Class函数得到的的权重： [0.6030927835051546, 2.925]
./data筛选/6Test.csv每一类的数量是: [3880, 800]
./data筛选/6Test.csvget_Class函数得到的的权重： [0.6030927835051546, 2.925]
./data筛选/6Test.csv每一类的数量是: [3880, 800]
./data筛选/6Test.csvget_Class函数得到的的权重： [0.6030927835051546, 2.925]
(4680, 10)
(117, 40, 10)
(4680, 1)
(117,)
(4680, 1)
(117,)
(4680, 1)
(117,)
zero: 0.6030927835051546
zero: 2.925
{0.0: 0.6030927835051546, 1.0: 2.925}
====================数据集6测试集轮评估数据=============================================
[[80 17]
 [ 1 19]]
TSS: 0.774742268041237
本轮评估完成 
Test set: Average loss: 6.2657, Accuracy: 99/117 (85%)

[[80 17]
 [ 1 19]]
Recall [0.82474227 0.95      ]
Precision [0.98765432 0.52777778]
Accuracy [0.84615385 0.84615385]
TSS [0.77474227 0.77474227]
HSS [0.58802817 0.58802817]
FAR [0.01234568 0.47222222]
data_FPR [0.05       0.17525773]
BS, BSS [0.13143514090694863, 0.07256925573442308]
数据集 6 测试集TSS: 0.774742268041237
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/7Test.csv每一类的数量是: [3640, 840]
./data筛选/7Test.csvget_Class函数得到的的权重： [0.6153846153846154, 2.6666666666666665]
./data筛选/7Test.csv每一类的数量是: [3640, 840]
./data筛选/7Test.csvget_Class函数得到的的权重： [0.6153846153846154, 2.6666666666666665]
./data筛选/7Test.csv每一类的数量是: [3640, 840]
./data筛选/7Test.csvget_Class函数得到的的权重： [0.6153846153846154, 2.6666666666666665]
(4480, 10)
(112, 40, 10)
(4480, 1)
(112,)
(4480, 1)
(112,)
(4480, 1)
(112,)
zero: 0.6153846153846154
zero: 2.6666666666666665
{0.0: 0.6153846153846154, 1.0: 2.6666666666666665}
====================数据集7测试集轮评估数据=============================================
[[78 13]
 [ 1 20]]
TSS: 0.8095238095238094
本轮评估完成 
Test set: Average loss: 8.0875, Accuracy: 98/112 (88%)

[[78 13]
 [ 1 20]]
Recall [0.85714286 0.95238095]
Precision [0.98734177 0.60606061]
Accuracy [0.875 0.875]
TSS [0.80952381 0.80952381]
HSS [0.66366366 0.66366366]
FAR [0.01265823 0.39393939]
data_FPR [0.04761905 0.14285714]
BS, BSS [0.15496398061238068, -0.017199462481267913]
数据集 7 测试集TSS: 0.8095238095238094
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/8Test.csv每一类的数量是: [3440, 640]
./data筛选/8Test.csvget_Class函数得到的的权重： [0.5930232558139535, 3.1875]
./data筛选/8Test.csv每一类的数量是: [3440, 640]
./data筛选/8Test.csvget_Class函数得到的的权重： [0.5930232558139535, 3.1875]
./data筛选/8Test.csv每一类的数量是: [3440, 640]
./data筛选/8Test.csvget_Class函数得到的的权重： [0.5930232558139535, 3.1875]
(4080, 10)
(102, 40, 10)
(4080, 1)
(102,)
(4080, 1)
(102,)
(4080, 1)
(102,)
zero: 0.5930232558139535
zero: 3.1875
{0.0: 0.5930232558139535, 1.0: 3.1875}
====================数据集8测试集轮评估数据=============================================
[[76 10]
 [ 1 15]]
TSS: 0.8212209302325582
本轮评估完成 
Test set: Average loss: 5.5509, Accuracy: 91/102 (89%)

[[76 10]
 [ 1 15]]
Recall [0.88372093 0.9375    ]
Precision [0.98701299 0.6       ]
Accuracy [0.89215686 0.89215686]
TSS [0.82122093 0.82122093]
HSS [0.66824364 0.66824364]
FAR [0.01298701 0.4       ]
data_FPR [0.0625     0.11627907]
BS, BSS [0.11339069993799747, 0.14264764378275763]
数据集 8 测试集TSS: 0.8212209302325582
Namespace(batch_size=16, cuda=True, datasetname='data筛选', dropout=0.5, embed='timeF', embed_dim=100, epochs=160, hidden_units=256, log_interval=100, lr=0.001, model_type='LSTM', num_dataset=9, num_heads=5, num_hidden_layers=4, num_layers=2, optim='Adam', print=1, seed=2021)
./data筛选/9Test.csv每一类的数量是: [3400, 840]
./data筛选/9Test.csvget_Class函数得到的的权重： [0.6235294117647059, 2.5238095238095237]
./data筛选/9Test.csv每一类的数量是: [3400, 840]
./data筛选/9Test.csvget_Class函数得到的的权重： [0.6235294117647059, 2.5238095238095237]
./data筛选/9Test.csv每一类的数量是: [3400, 840]
./data筛选/9Test.csvget_Class函数得到的的权重： [0.6235294117647059, 2.5238095238095237]
(4240, 10)
(106, 40, 10)
(4240, 1)
(106,)
(4240, 1)
(106,)
(4240, 1)
(106,)
zero: 0.6235294117647059
zero: 2.5238095238095237
{0.0: 0.6235294117647059, 1.0: 2.5238095238095237}
====================数据集9测试集轮评估数据=============================================
[[68 17]
 [ 1 20]]
TSS: 0.7523809523809524
本轮评估完成 
Test set: Average loss: 6.3526, Accuracy: 88/106 (83%)

[[68 17]
 [ 1 20]]
Recall [0.8        0.95238095]
Precision [0.98550725 0.54054054]
Accuracy [0.83018868 0.83018868]
TSS [0.75238095 0.75238095]
HSS [0.58467566 0.58467566]
FAR [0.01449275 0.45945946]
data_FPR [0.04761905 0.2       ]
BS, BSS [0.12502726706622672, 0.21299362870805427]
数据集 9 测试集TSS: 0.7523809523809524
#接下来计算所有测试集指标均值和方法
[[768 119]
 [ 13 181]]
[[0.11246058757599539, 0.238666538723165], [0.14370021793202084, -0.07102041375544621], [0.10664472847311182, 0.23784301105576933], [0.11027165107182521, 0.3388591031081697], [0.11561098161401942, 0.1610691491497045], [0.12416595652362349, 0.22396277172735335], [0.13143514090694863, 0.07256925573442308], [0.15496398061238068, -0.017199462481267913], [0.11339069993799747, 0.14264764378275763], [0.12502726706622672, 0.21299362870805427]]
结果已写入 ./model_output/2025-03-28-17-18-01/results.xlsx
程序运行时间: 0.21 分钟
